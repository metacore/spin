# we need to supply our own assembly versions of libgcc1.c files,
# since the user may not have native 'cc' available

LIBGCC1 =
CROSS_LIBGCC1 =

# gmon build rule:
gmon.o:	$(srcdir)/config/sparc/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \
		-c $(srcdir)/config/sparc/gmon-sol2.c -o gmon.o

# Assemble startup files.
crt1.o: $(srcdir)/config/sparc/sol2-c1.asm
	$(AS) -o crt1.o $(srcdir)/config/sparc/sol2-c1.asm
crti.o: $(srcdir)/config/sparc/sol2-ci.asm
	$(AS) -o crti.o $(srcdir)/config/sparc/sol2-ci.asm
crtn.o: $(srcdir)/config/sparc/sol2-cn.asm
	$(AS) -o crtn.o $(srcdir)/config/sparc/sol2-cn.asm

# We need to use -fPIC when we are using gcc to compile the routines in
# crtstuff.c.  This is only really needed when we are going to use gcc/g++
# to produce a shared library, but since we don't know ahead of time when
# we will be doing that, we just always use -fPIC when compiling the
# routines in crtstuff.c.

# Since the GNU assembler doesn't support PIC yet, we need to force gcc to
# use the native assembler when building crtstuff.  If we're a
# cross-compiler, just give up on using PIC.

CRTSTUFF_T_CFLAGS = `if [ -z "$(CROSS)" ]; then echo -fPIC -B/usr/ccs/bin/; fi`
