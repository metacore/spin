Index: alpha.c
===================================================================
RCS file: /afs/cs/project/spin/cvsroot/spin/local/m3cc/gcc/config/alpha/alpha.c,v
retrieving revision 1.1
retrieving revision 1.3
diff -c -r1.1 -r1.3
*** /tmp/T0aayCza	Wed Nov 13 15:15:31 1996
--- /tmp/T1aayCza	Wed Nov 13 15:15:31 1996
***************
*** 19,24 ****
--- 19,36 ----
  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */
  
  
+ /* HISTORY
+  * 29-Jul-96  Charles Garrett (garrett) at the University of Washington
+  *	Create an output_prolog procedure which is responsible for
+  *	 setting up the procedure prolog and any profiling calls.
+  *
+  * 05-May-96  Charles Garrett (garrett) at the University of Washington
+  *	When profiling is turned on, force the compiler to generate the
+  *	 correct $gp at the beginning of every procedure. Otherwise it
+  *	 won't find the _mcount procedure.
+  *
+ */
+ 
  #include <stdio.h>
  #include "config.h"
  #include "rtl.h"
***************
*** 1267,1293 ****
      fprintf (file, "\tldah $%d,%d($%d)\n", out_reg, high, in_reg);
  }
  
! /* Write function prologue.  */
  
  void
! output_prolog (file, size)
       FILE *file;
-      int size;
  {
-   HOST_WIDE_INT out_args_size
-     = ALPHA_ROUND (current_function_outgoing_args_size);
-   HOST_WIDE_INT sa_size = alpha_sa_size ();
-   HOST_WIDE_INT frame_size
-     = (out_args_size + sa_size
-        + ALPHA_ROUND (size + current_function_pretend_args_size));
-   HOST_WIDE_INT reg_offset = out_args_size;
-   HOST_WIDE_INT start_reg_offset = reg_offset;
-   HOST_WIDE_INT actual_start_reg_offset = start_reg_offset;
-   int int_reg_save_area_size = 0;
-   rtx insn;
-   unsigned reg_mask = 0;
-   int i;
- 
    /* Ecoff can handle multiple .file directives, so put out file and lineno.
       We have to do that before the .ent directive as we cannot switch
       files within procedures with native ecoff because line numbers are
--- 1279,1292 ----
      fprintf (file, "\tldah $%d,%d($%d)\n", out_reg, high, in_reg);
  }
  
! /* SPIN Change. 
!    We split the writing of the procedure name from the prolog, so
!    that we can insert profiling code in the middle. */
  
  void
! output_name (file)
       FILE *file;
  {
    /* Ecoff can handle multiple .file directives, so put out file and lineno.
       We have to do that before the .ent directive as we cannot switch
       files within procedures with native ecoff because line numbers are
***************
*** 1314,1320 ****
--- 1313,1341 ----
    fprintf (file, "\n");
    ASM_OUTPUT_LABEL (file, alpha_function_name);
    inside_function = TRUE;
+ }
  
+ /* Write function prologue.  */
+ 
+ void
+ output_prolog (file, size)
+      FILE *file;
+      int size;
+ {
+   HOST_WIDE_INT out_args_size
+     = ALPHA_ROUND (current_function_outgoing_args_size);
+   HOST_WIDE_INT sa_size = alpha_sa_size ();
+   HOST_WIDE_INT frame_size
+     = (out_args_size + sa_size
+        + ALPHA_ROUND (size + current_function_pretend_args_size));
+   HOST_WIDE_INT reg_offset = out_args_size;
+   HOST_WIDE_INT start_reg_offset = reg_offset;
+   HOST_WIDE_INT actual_start_reg_offset = start_reg_offset;
+   int int_reg_save_area_size = 0;
+   rtx insn;
+   unsigned reg_mask = 0;
+   int i;
+ 
    /* Set up offsets to alpha virtual arg/local debugging pointer.  */
  
    alpha_auto_offset = -frame_size + current_function_pretend_args_size;
***************
*** 1324,1330 ****
       Even if we are a static function, we still need to do this in case
       our address is taken and passed to something like qsort.  */
  
!   alpha_function_needs_gp = 0;
    for (insn = get_insns (); insn; insn = NEXT_INSN (insn))
      if ((GET_CODE (insn) == CALL_INSN)
  	|| (GET_RTX_CLASS (GET_CODE (insn)) == 'i'
--- 1345,1355 ----
       Even if we are a static function, we still need to do this in case
       our address is taken and passed to something like qsort.  */
  
!   /* SPIN: We need a GP if we are profiling and the code uses multiple
!      GP's. We will err on the side of caution and always load the GP
!      whenever we are profiling. */
! 
!   alpha_function_needs_gp = profile_flag;
    for (insn = get_insns (); insn; insn = NEXT_INSN (insn))
      if ((GET_CODE (insn) == CALL_INSN)
  	|| (GET_RTX_CLASS (GET_CODE (insn)) == 'i'
***************
*** 1340,1346 ****
    if (alpha_function_needs_gp)
      fprintf (file, "\tldgp $29,0($27)\n");
  
!   /* Put a label after the GP load so we can enter the function at it.  */
    assemble_name (file, alpha_function_name);
    fprintf (file, "..ng:\n");
  
--- 1365,1371 ----
    if (alpha_function_needs_gp)
      fprintf (file, "\tldgp $29,0($27)\n");
  
!   /* Put a label after the GP load so we can enter the function at it. */
    assemble_name (file, alpha_function_name);
    fprintf (file, "..ng:\n");
  
