This is Info file ./gdb.info, produced by Makeinfo-1.52 from the input
file gdb.texinfo.

START-INFO-DIR-ENTRY
* Gdb: (gdb).                     The GNU debugger.
END-INFO-DIR-ENTRY
   This file documents the GNU debugger GDB.

   This is Edition 4.12, January 1994, of `Debugging with GDB: the GNU
Source-Level Debugger' for GDB Version 4.13.

   Copyright (C) 1988, '89, '90, '91, '92, '93 Free Software
Foundation, Inc.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided also
that the entire resulting derived work is distributed under the terms
of a permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions.


File: gdb.info,  Node: Formatting Documentation,  Next: Installing GDB,  Prev: Renamed Commands,  Up: Top

Formatting Documentation
************************

   The GDB 4 release includes an already-formatted reference card, ready
for printing with PostScript or Ghostscript, in the `gdb' subdirectory
of the main source directory(1).  If you can use PostScript or
Ghostscript with your printer, you can print the reference card
immediately with `refcard.ps'.

   The release also includes the source for the reference card.  You
can format it, using TeX, by typing:

     make refcard.dvi

   The GDB reference card is designed to print in landscape mode on US
"letter" size paper; that is, on a sheet 11 inches wide by 8.5 inches
high.  You will need to specify this form of printing as an option to
your DVI output program.

   All the documentation for GDB comes as part of the machine-readable
distribution.  The documentation is written in Texinfo format, which is
a documentation system that uses a single source file to produce both
on-line information and a printed manual.  You can use one of the Info
formatting commands to create the on-line version of the documentation
and TeX (or `texi2roff') to typeset the printed version.

   GDB includes an already formatted copy of the on-line Info version of
this manual in the `gdb' subdirectory.  The main Info file is
`gdb-VERSION-NUMBER/gdb/gdb.info', and it refers to subordinate files
matching `gdb.info*' in the same directory.  If necessary, you can
print out these files, or read them with any editor; but they are
easier to read using the `info' subsystem in GNU Emacs or the
standalone `info' program, available as part of the GNU Texinfo
distribution.

   If you want to format these Info files yourself, you need one of the
Info formatting programs, such as `texinfo-format-buffer' or `makeinfo'.

   If you have `makeinfo' installed, and are in the top level GDB
source directory (`gdb-4.13', in the case of version 4.13), you can
make the Info file by typing:

     cd gdb
     make gdb.info

   If you want to typeset and print copies of this manual, you need TeX,
a program to print its DVI output files, and `texinfo.tex', the Texinfo
definitions file.

   TeX is a typesetting program; it does not print files directly, but
produces output files called DVI files.  To print a typeset document,
you need a program to print DVI files.  If your system has TeX
installed, chances are it has such a program.  The precise command to
use depends on your system; `lpr -d' is common; another (for PostScript
devices) is `dvips'.  The DVI print command may require a file name
without any extension or a `.dvi' extension.

   TeX also requires a macro definitions file called `texinfo.tex'.
This file tells TeX how to typeset a document written in Texinfo
format.  On its own, TeX cannot read, much less typeset a Texinfo file.
`texinfo.tex' is distributed with GDB and is located in the
`gdb-VERSION-NUMBER/texinfo' directory.

   If you have TeX and a DVI printer program installed, you can typeset
and print this manual.  First switch to the the `gdb' subdirectory of
the main source directory (for example, to `gdb-4.13/gdb') and then
type:

     make gdb.dvi

   ---------- Footnotes ----------

   (1)  In `gdb-4.13/gdb/refcard.ps' of the version 4.13 release.


File: gdb.info,  Node: Installing GDB,  Next: Index,  Prev: Formatting Documentation,  Up: Top

Installing GDB
**************

   GDB comes with a `configure' script that automates the process of
preparing GDB for installation; you can then use `make' to build the
`gdb' program.

   The GDB distribution includes all the source code you need for GDB in
a single directory, whose name is usually composed by appending the
version number to `gdb'.

   For example, the GDB version 4.13 distribution is in the `gdb-4.13'
directory.  That directory contains:

`gdb-4.13/configure (and supporting files)'
     script for configuring GDB and all its supporting libraries.

`gdb-4.13/gdb'
     the source specific to GDB itself

`gdb-4.13/bfd'
     source for the Binary File Descriptor library

`gdb-4.13/include'
     GNU include files

`gdb-4.13/libiberty'
     source for the `-liberty' free software library

`gdb-4.13/opcodes'
     source for the library of opcode tables and disassemblers

`gdb-4.13/readline'
     source for the GNU command-line interface

`gdb-4.13/glob'
     source for the GNU filename pattern-matching subroutine

`gdb-4.13/mmalloc'
     source for the GNU memory-mapped malloc package

   The simplest way to configure and build GDB is to run `configure'
from the `gdb-VERSION-NUMBER' source directory, which in this example
is the `gdb-4.13' directory.

   First switch to the `gdb-VERSION-NUMBER' source directory if you are
not already in it; then run `configure'.  Pass the identifier for the
platform on which GDB will run as an argument.

   For example:

     cd gdb-4.13
     ./configure HOST
     make

where HOST is an identifier such as `sun4' or `decstation', that
identifies the platform where GDB will run.  (You can often leave off
HOST; `configure' tries to guess the correct value by examining your
system.)

   Running `configure HOST' and then running `make' builds the `bfd',
`readline', `mmalloc', and `libiberty' libraries, then `gdb' itself.
The configured source files, and the binaries, are left in the
corresponding source directories.

   `configure' is a Bourne-shell (`/bin/sh') script; if your system
does not recognize this automatically when you run a different shell,
you may need to run `sh' on it explicitly:

     sh configure HOST

   If you run `configure' from a directory that contains source
directories for multiple libraries or programs, such as the `gdb-4.13'
source directory for version 4.13, `configure' creates configuration
files for every directory level underneath (unless you tell it not to,
with the `--norecursion' option).

   You can run the `configure' script from any of the subordinate
directories in the GDB distribution if you only want to configure that
subdirectory, but be sure to specify a path to it.

   For example, with version 4.13, type the following to configure only
the `bfd' subdirectory:

     cd gdb-4.13/bfd
     ../configure HOST

   You can install `gdb' anywhere; it has no hardwired paths.  However,
you should make sure that the shell on your path (named by the `SHELL'
environment variable) is publicly readable.  Remember that GDB uses the
shell to start your program--some systems refuse to let GDB debug child
processes whose programs are not readable.

* Menu:

* Separate Objdir::             Compiling GDB in another directory
* Config Names::                Specifying names for hosts and targets
* configure Options::           Summary of options for configure


File: gdb.info,  Node: Separate Objdir,  Next: Config Names,  Up: Installing GDB

Compiling GDB in another directory
==================================

   If you want to run GDB versions for several host or target machines,
you need a different `gdb' compiled for each combination of host and
target.  `configure' is designed to make this easy by allowing you to
generate each configuration in a separate subdirectory, rather than in
the source directory.  If your `make' program handles the `VPATH'
feature (GNU `make' does), running `make' in each of these directories
builds the `gdb' program specified there.

   To build `gdb' in a separate directory, run `configure' with the
`--srcdir' option to specify where to find the source.  (You also need
to specify a path to find `configure' itself from your working
directory.  If the path to `configure' would be the same as the
argument to `--srcdir', you can leave out the `--srcdir' option; it is
assumed.)

   For example, with version 4.13, you can build GDB in a separate
directory for a Sun 4 like this:

     cd gdb-4.13
     mkdir ../gdb-sun4
     cd ../gdb-sun4
     ../gdb-4.13/configure sun4
     make

   When `configure' builds a configuration using a remote source
directory, it creates a tree for the binaries with the same structure
(and using the same names) as the tree under the source directory.  In
the example, you'd find the Sun 4 library `libiberty.a' in the
directory `gdb-sun4/libiberty', and GDB itself in `gdb-sun4/gdb'.

   One popular reason to build several GDB configurations in separate
directories is to configure GDB for cross-compiling (where GDB runs on
one machine--the host--while debugging programs that run on another
machine--the target).  You specify a cross-debugging target by giving
the `--target=TARGET' option to `configure'.

   When you run `make' to build a program or library, you must run it
in a configured directory--whatever directory you were in when you
called `configure' (or one of its subdirectories).

   The `Makefile' that `configure' generates in each source directory
also runs recursively.  If you type `make' in a source directory such
as `gdb-4.13' (or in a separate configured directory configured with
`--srcdir=DIRNAME/gdb-4.13'), you will build all the required
libraries, and then build GDB.

   When you have multiple hosts or targets configured in separate
directories, you can run `make' on them in parallel (for example, if
they are NFS-mounted on each of the hosts); they will not interfere
with each other.


File: gdb.info,  Node: Config Names,  Next: configure Options,  Prev: Separate Objdir,  Up: Installing GDB

Specifying names for hosts and targets
======================================

   The specifications used for hosts and targets in the `configure'
script are based on a three-part naming scheme, but some short
predefined aliases are also supported.  The full naming scheme encodes
three pieces of information in the following pattern:

     ARCHITECTURE-VENDOR-OS

   For example, you can use the alias `sun4' as a HOST argument, or as
the value for TARGET in a `--target=TARGET' option.  The equivalent
full name is `sparc-sun-sunos4'.

   The `configure' script accompanying GDB does not provide any query
facility to list all supported host and target names or aliases.
`configure' calls the Bourne shell script `config.sub' to map
abbreviations to full names; you can read the script, if you wish, or
you can use it to test your guesses on abbreviations--for example:

     % sh config.sub sun4
     sparc-sun-sunos4.1.1
     % sh config.sub sun3
     m68k-sun-sunos4.1.1
     % sh config.sub decstation
     mips-dec-ultrix4.2
     % sh config.sub hp300bsd
     m68k-hp-bsd
     % sh config.sub i386v
     i386-unknown-sysv
     % sh config.sub i786v
     Invalid configuration `i786v': machine `i786v' not recognized

`config.sub' is also distributed in the GDB source directory
(`gdb-4.13', for version 4.13).


File: gdb.info,  Node: configure Options,  Prev: Config Names,  Up: Installing GDB

`configure' options
===================

   Here is a summary of the `configure' options and arguments that are
most often useful for building GDB.  `configure' also has several other
options not listed here.  *note : (configure.info)What Configure Does,
for a full explanation of `configure'.

     configure [--help]
               [--prefix=DIR]
               [--srcdir=DIRNAME]
               [--norecursion] [--rm]
               [--target=TARGET] HOST

You may introduce options with a single `-' rather than `--' if you
prefer; but you may abbreviate option names if you use `--'.

`--help'
     Display a quick summary of how to invoke `configure'.

`-prefix=DIR'
     Configure the source to install programs and files under directory
     `DIR'.

`--srcdir=DIRNAME'
     *Warning: using this option requires GNU `make', or another `make'
     that implements the `VPATH' feature.*
     Use this option to make configurations in directories separate
     from the GDB source directories.  Among other things, you can use
     this to build (or maintain) several configurations simultaneously,
     in separate directories.  `configure' writes configuration
     specific files in the current directory, but arranges for them to
     use the source in the directory DIRNAME.  `configure' creates
     directories under the working directory in parallel to the source
     directories below DIRNAME.

`--norecursion'
     Configure only the directory level where `configure' is executed;
     do not propagate configuration to subdirectories.

`--rm'
     *Remove* files otherwise built during configuration.

`--target=TARGET'
     Configure GDB for cross-debugging programs running on the specified
     TARGET.  Without this option, GDB is configured to debug programs
     that run on the same machine (HOST) as GDB itself.

     There is no convenient way to generate a list of all available
     targets.

`HOST ...'
     Configure GDB to run on the specified HOST.

     There is no convenient way to generate a list of all available
     hosts.

`configure' accepts other options, for compatibility with configuring
other GNU tools recursively; but these are the only options that affect
GDB or its supporting libraries.


File: gdb.info,  Node: Index,  Prev: Installing GDB,  Up: Top

Index
*****

* Menu:

* #:                                    Command Syntax.
* $bpnum:                               Set Breaks.
* $cdir:                                Source Path.
* $cwd:                                 Source Path.
* $_:                                   Convenience Vars.
* $__:                                  Convenience Vars.
* .:                                    M2 Scope.
* .esgdbinit:                           Command Files.
* .os68gdbinit:                         Command Files.
* .vxgdbinit:                           Command Files.
* /proc:                                Process Information.
* @:                                    Arrays.
* # in Modula-2:                        GDB/M2.
* $$:                                   Value History.
* $_ and info breakpoints:              Set Breaks.
* $_ and info line:                     Machine Code.
* $_, $__, and value history:           Memory.
* $:                                    Value History.
* breakpoint subroutine, remote:        Stub Contents.
* heuristic-fence-post (MIPS):          MIPS Stack.
* remotedebug, MIPS protocol:           MIPS Remote.
* retransmit-timeout, MIPS protocol:    MIPS Remote.
* timeout, MIPS protocol:               MIPS Remote.
* vi style command editing:             Readline Vi Mode.
* .gdbinit:                             Command Files.
* COFF versus C++:                      Cplus expressions.
* ECOFF and C++:                        Cplus expressions.
* ELF/DWARF and C++:                    Cplus expressions.
* ELF/stabs and C++:                    Cplus expressions.
* XCOFF and C++:                        Cplus expressions.
* GDB bugs, reporting:                  Bug Reporting.
* {TYPE}:                               Expressions.
* a.out and C++:                        Cplus expressions.
* abbreviation:                         Command Syntax.
* active targets:                       Active Targets.
* add-symbol-file:                      Files.
* add-syms:                             Renamed Commands.
* AMD 29K register stack:               Registers.
* AMD EB29K:                            Target Commands.
* AMD29K via UDI:                       UDI29K Remote.
* arguments (to your program):          Arguments.
* artificial array:                     Arrays.
* assembly instructions:                Machine Code.
* assignment:                           Assignment.
* attach:                               Attach.
* attach:                               Attach.
* automatic display:                    Auto Display.
* automatic thread selection:           Threads.
* b:                                    Set Breaks.
* backtrace:                            Backtrace.
* break:                                Set Breaks.
* break ... thread THREADNO:            Thread Stops.
* break in overloaded functions:        Debugging C plus plus.
* breakpoint commands:                  Break Commands.
* breakpoint conditions:                Conditions.
* breakpoint numbers:                   Breakpoints.
* breakpoint on memory address:         Breakpoints.
* breakpoint on variable modification:  Breakpoints.
* breakpoints:                          Breakpoints.
* breakpoints and threads:              Thread Stops.
* bt:                                   Backtrace.
* bug criteria:                         Bug Criteria.
* bug reports:                          Bug Reporting.
* bugs in GDB:                          GDB Bugs.
* c:                                    Continuing and Stepping.
* C and C++:                            C.
* C and C++ checks:                     C Checks.
* C and C++ constants:                  C Operators.
* C and C++ defaults:                   C Defaults.
* C and C++ operators:                  C.
* C++:                                  C.
* C++ and object formats:               Cplus expressions.
* C++ exception handling:               Debugging C plus plus.
* C++ scope resolution:                 Variables.
* C++ support, not in COFF:             Cplus expressions.
* C++ symbol decoding style:            Print Settings.
* C++ symbol display:                   Debugging C plus plus.
* call:                                 Calling.
* call overloaded functions:            Cplus expressions.
* call stack:                           Stack.
* calling functions:                    Calling.
* calling make:                         Shell Commands.
* casts, to view memory:                Expressions.
* catch:                                Exception Handling.
* catch exceptions:                     Frame Info.
* cd:                                   Working Directory.
* cdir:                                 Source Path.
* checks, range:                        Type Checking.
* checks, type:                         Checks.
* checksum, for GDB remote:             Protocol.
* clear:                                Delete Breaks.
* clearing breakpoints, watchpoints:    Delete Breaks.
* colon, doubled as scope operator:     M2 Scope.
* colon-colon:                          Variables.
* colon-colon:                          M2 Scope.
* command files:                        Command Files.
* command files:                        Hooks.
* command line editing:                 Editing.
* commands:                             Break Commands.
* commands for C++:                     Debugging C plus plus.
* commands to STDBUG (ST2000):          ST2000 Remote.
* comment:                              Command Syntax.
* compilation directory:                Source Path.
* completion:                           Completion.
* completion of quoted strings:         Completion.
* condition:                            Conditions.
* conditional breakpoints:              Conditions.
* configuring GDB:                      Installing GDB.
* confirmation:                         Messages/Warnings.
* connect (to STDBUG):                  ST2000 Remote.
* continue:                             Continuing and Stepping.
* continuing:                           Continuing and Stepping.
* continuing threads:                   Thread Stops.
* control C, and remote debugging:      Bootstrapping.
* controlling terminal:                 Input/Output.
* convenience variables:                Convenience Vars.
* core:                                 Files.
* core dump file:                       Files.
* core-file:                            Files.
* CPU simulator:                        Simulator.
* crash of debugger:                    Bug Criteria.
* current directory:                    Source Path.
* current thread:                       Threads.
* cwd:                                  Source Path.
* d:                                    Delete Breaks.
* debugger crash:                       Bug Criteria.
* debugging optimized code:             Compilation.
* debugging stub, example:              Protocol.
* debugging target:                     Targets.
* define:                               Define.
* delete:                               Delete Breaks.
* delete breakpoints:                   Delete Breaks.
* delete display:                       Auto Display.
* delete environment:                   Renamed Commands.
* deleting breakpoints, watchpoints:    Delete Breaks.
* detach:                               Attach.
* device:                               Hitachi Boards.
* directories for source files:         Source Path.
* directory:                            Source Path.
* directory, compilation:               Source Path.
* directory, current:                   Source Path.
* dis:                                  Disabling.
* disable:                              Disabling.
* disable breakpoints:                  Disabling.
* disable display:                      Auto Display.
* disabled breakpoints:                 Disabling.
* disassemble:                          Machine Code.
* display:                              Auto Display.
* display of expressions:               Auto Display.
* do:                                   Selection.
* document:                             Define.
* documentation:                        Formatting Documentation.
* down:                                 Selection.
* down-silently:                        Selection.
* download to H8/300 or H8/500:         Files.
* download to Hitachi SH:               Files.
* download to Nindy-960:                Files.
* download to VxWorks:                  VxWorks Download.
* dynamic linking:                      Files.
* eb.log:                               Remote Log.
* EB29K board:                          EB29K Remote.
* EBMON:                                Comms (EB29K).
* echo:                                 Output.
* editing:                              Editing.
* editing-mode:                         Readline Init Syntax.
* emacs:                                Emacs.
* enable:                               Disabling.
* enable breakpoints:                   Disabling.
* enable display:                       Auto Display.
* enabled breakpoints:                  Disabling.
* end:                                  Break Commands.
* entering numbers:                     Numbers.
* environment (of your program):        Environment.
* error on valid input:                 Bug Criteria.
* event designators:                    Event Designators.
* examining data:                       Data.
* examining memory:                     Memory.
* exception handlers:                   Frame Info.
* exception handlers:                   Exception Handling.
* exceptionHandler:                     Bootstrapping.
* exec-file:                            Files.
* executable file:                      Files.
* exiting GDB:                          Quitting GDB.
* expansion:                            History Interaction.
* expressions:                          Expressions.
* expressions in C or C++:              C.
* expressions in C++:                   Cplus expressions.
* expressions in Modula-2:              Modula-2.
* f:                                    Selection.
* fatal signal:                         Bug Criteria.
* fatal signals:                        Signals.
* fg:                                   Continuing and Stepping.
* file:                                 Files.
* finish:                               Continuing and Stepping.
* flinching:                            Messages/Warnings.
* floating point:                       Floating Point Hardware.
* floating point registers:             Registers.
* floating point, MIPS remote:          MIPS Remote.
* flush_i_cache:                        Bootstrapping.
* focus of debugging:                   Threads.
* foo:                                  Symbol Errors.
* format options:                       Print Settings.
* formatted output:                     Output Formats.
* Fortran:                              Summary.
* forward-search:                       Search.
* frame:                                Selection.
* frame:                                Frames.
* frame number:                         Frames.
* frame pointer:                        Frames.
* frameless execution:                  Frames.
* g++:                                  C.
* GDB reference card:                   Formatting Documentation.
* GDBHISTFILE:                          History.
* gdbserver:                            Server.
* getDebugChar:                         Bootstrapping.
* GNU C++:                              C.
* h:                                    Help.
* H8/300 or H8/500 download:            Files.
* H8/300 or H8/500 simulator:           Simulator.
* handle:                               Signals.
* handle_exception:                     Stub Contents.
* handling signals:                     Signals.
* help:                                 Help.
* help target:                          Target Commands.
* help user-defined:                    Define.
* history expansion:                    History.
* history file:                         History.
* history number:                       Value History.
* history save:                         History.
* history size:                         History.
* history substitution:                 History.
* Hitachi SH download:                  Files.
* Hitachi SH simulator:                 Simulator.
* horizontal-scroll-mode:               Readline Init Syntax.
* i:                                    Help.
* i/o:                                  Input/Output.
* i386:                                 Remote Serial.
* i386-stub.c:                          Remote Serial.
* i960:                                 i960-Nindy Remote.
* ignore:                               Conditions.
* ignore count (of breakpoint):         Conditions.
* INCLUDE_RDB:                          VxWorks Remote.
* info:                                 Help.
* info address:                         Symbols.
* info all-registers:                   Registers.
* info args:                            Frame Info.
* info breakpoints:                     Set Breaks.
* info catch:                           Frame Info.
* info convenience:                     Renamed Commands.
* info copying:                         Renamed Commands.
* info directories:                     Renamed Commands.
* info display:                         Auto Display.
* info editing:                         Renamed Commands.
* info f:                               Frame Info.
* info files:                           Files.
* info float:                           Floating Point Hardware.
* info frame:                           Frame Info.
* info frame:                           Show.
* info functions:                       Symbols.
* info history:                         Renamed Commands.
* info line:                            Machine Code.
* info locals:                          Frame Info.
* info proc:                            Process Information.
* info proc id:                         Process Information.
* info proc mappings:                   Process Information.
* info proc status:                     Process Information.
* info proc times:                      Process Information.
* info program:                         Stopping.
* info registers:                       Registers.
* info s:                               Backtrace.
* info set:                             Help.
* info share:                           Files.
* info sharedlibrary:                   Files.
* info signals:                         Signals.
* info source:                          Symbols.
* info source:                          Show.
* info sources:                         Symbols.
* info stack:                           Backtrace.
* info target:                          Files.
* info targets:                         Renamed Commands.
* info terminal:                        Input/Output.
* info threads:                         Threads.
* info types:                           Symbols.
* info values:                          Renamed Commands.
* info variables:                       Symbols.
* info version:                         Renamed Commands.
* info warranty:                        Renamed Commands.
* info watchpoints:                     Set Watchpoints.
* inheritance:                          Debugging C plus plus.
* init file:                            Command Files.
* init file name:                       Command Files.
* initial frame:                        Frames.
* innermost frame:                      Frames.
* inspect:                              Data.
* installation:                         Installing GDB.
* instructions, assembly:               Machine Code.
* Intel:                                Remote Serial.
* interaction, readline:                Readline Interaction.
* internal GDB breakpoints:             Set Breaks.
* interrupt:                            Quitting GDB.
* interrupting remote programs:         Debug Session.
* interrupting remote targets:          Bootstrapping.
* invalid input:                        Bug Criteria.
* jump:                                 Jumping.
* kill:                                 Kill Process.
* l:                                    List.
* languages:                            Languages.
* latest breakpoint:                    Set Breaks.
* leaving GDB:                          Quitting GDB.
* linespec:                             List.
* list:                                 List.
* listing machine instructions:         Machine Code.
* load:                                 Files.
* log file for EB29K:                   Remote Log.
* m680x0:                               Remote Serial.
* m68k-stub.c:                          Remote Serial.
* machine instructions:                 Machine Code.
* maint info breakpoints:               Set Breaks.
* maint print psymbols:                 Symbols.
* maint print symbols:                  Symbols.
* make:                                 Shell Commands.
* mapped:                               Files.
* mark-modified-lines:                  Readline Init Syntax.
* member functions:                     Cplus expressions.
* memory models, H8/500:                Hitachi Special.
* memory tracing:                       Breakpoints.
* memory, viewing as typed object:      Expressions.
* memory-mapped symbol file:            Files.
* memset:                               Bootstrapping.
* MIPS remotedebug protocol:            MIPS Remote.
* MIPS boards:                          MIPS Remote.
* MIPS remote floating point:           MIPS Remote.
* MIPS stack:                           MIPS Stack.
* Modula-2:                             Modula-2.
* Modula-2 built-ins:                   M2 Operators.
* Modula-2 checks:                      M2 Checks.
* Modula-2 constants:                   Built-In Func/Proc.
* Modula-2 defaults:                    M2 Defaults.
* Modula-2 operators:                   M2 Operators.
* Modula-2, deviations from:            Deviations.
* Motorola 680x0:                       Remote Serial.
* multiple targets:                     Active Targets.
* multiple threads:                     Threads.
* n:                                    Continuing and Stepping.
* names of symbols:                     Symbols.
* namespace in C++:                     Cplus expressions.
* negative breakpoint numbers:          Set Breaks.
* New SYSTAG:                           Threads.
* next:                                 Continuing and Stepping.
* nexti:                                Continuing and Stepping.
* ni:                                   Continuing and Stepping.
* Nindy:                                i960-Nindy Remote.
* number representation:                Numbers.
* numbers for breakpoints:              Breakpoints.
* object formats and C++:               Cplus expressions.
* online documentation:                 Help.
* optimized code, debugging:            Compilation.
* outermost frame:                      Frames.
* output:                               Output.
* output formats:                       Output Formats.
* overloading:                          Breakpoint Menus.
* overloading in C++:                   Debugging C plus plus.
* packets, reporting on stdout:         Protocol.
* partial symbol dump:                  Symbols.
* patching binaries:                    Patching.
* path:                                 Environment.
* pauses in output:                     Screen Size.
* pipes:                                Starting.
* pointer, finding referent:            Print Settings.
* prefer-visible-bell:                  Readline Init Syntax.
* print:                                Data.
* print settings:                       Print Settings.
* printf:                               Output.
* printing data:                        Data.
* process image:                        Process Information.
* prompt:                               Prompt.
* protocol, GDB remote serial:          Protocol.
* ptype:                                Symbols.
* putDebugChar:                         Bootstrapping.
* pwd:                                  Working Directory.
* q:                                    Quitting GDB.
* quit:                                 Quitting GDB.
* quotes in commands:                   Completion.
* quoting names:                        Symbols.
* raise exceptions:                     Exception Handling.
* range checking:                       Type Checking.
* rbreak:                               Set Breaks.
* reading symbols immediately:          Files.
* readline:                             Editing.
* readnow:                              Files.
* redirection:                          Input/Output.
* reference card:                       Formatting Documentation.
* reference declarations:               Cplus expressions.
* register stack, AMD29K:               Registers.
* registers:                            Registers.
* regular expression:                   Set Breaks.
* reloading symbols:                    Messages/Warnings.
* remote connection without stubs:      Server.
* remote debugging:                     Remote.
* remote programs, interrupting:        Debug Session.
* remote serial debugging summary:      Debug Session.
* remote serial debugging, overview:    Remote Serial.
* remote serial protocol:               Protocol.
* remote serial stub:                   Stub Contents.
* remote serial stub list:              Remote Serial.
* remote serial stub, initialization:   Stub Contents.
* remote serial stub, main routine:     Stub Contents.
* remote stub, example:                 Protocol.
* remote stub, support routines:        Bootstrapping.
* repeating commands:                   Command Syntax.
* reporting bugs in GDB:                GDB Bugs.
* reset:                                Nindy Reset.
* response time, MIPS debugging:        MIPS Stack.
* resuming execution:                   Continuing and Stepping.
* RET:                                  Command Syntax.
* return:                               Returning.
* returning from a function:            Returning.
* reverse-search:                       Search.
* run:                                  Starting.
* running:                              Starting.
* running 29K programs:                 EB29K Remote.
* running VxWorks tasks:                VxWorks Attach.
* s:                                    Continuing and Stepping.
* saving symbol table:                  Files.
* scope:                                M2 Scope.
* search:                               Search.
* searching:                            Search.
* selected frame:                       Stack.
* serial connections, debugging:        Protocol.
* serial device, Hitachi micros:        Hitachi Boards.
* serial line speed, Hitachi micros:    Hitachi Boards.
* serial line, target remote:           Debug Session.
* serial protocol, GDB remote:          Protocol.
* set addressprint:                     Renamed Commands.
* set args:                             Arguments.
* set array-max:                        Renamed Commands.
* set arrayprint:                       Renamed Commands.
* set asm-demangle:                     Renamed Commands.
* set caution:                          Renamed Commands.
* set check:                            Type Checking.
* set check:                            Range Checking.
* set check range:                      Range Checking.
* set check type:                       Type Checking.
* set complaints:                       Messages/Warnings.
* set confirm:                          Messages/Warnings.
* set demangle:                         Renamed Commands.
* set demangle-style:                   Print Settings.
* set editing:                          Editing.
* set environment:                      Environment.
* set height:                           Screen Size.
* set history expansion:                History.
* set history filename:                 History.
* set history save:                     History.
* set history size:                     History.
* set history write:                    Renamed Commands.
* set language:                         Manually.
* set listsize:                         List.
* set machine:                          Hitachi Special.
* set memory MOD:                       Hitachi Special.
* set mipsfpu off:                      MIPS Remote.
* set prettyprint:                      Renamed Commands.
* set print address:                    Print Settings.
* set print array:                      Print Settings.
* set print asm-demangle:               Print Settings.
* set print demangle:                   Print Settings.
* set print elements:                   Print Settings.
* set print max-symbolic-offset:        Print Settings.
* set print object:                     Print Settings.
* set print pretty:                     Print Settings.
* set print sevenbit-strings:           Print Settings.
* set print symbol-filename:            Print Settings.
* set print union:                      Print Settings.
* set print vtbl:                       Print Settings.
* set prompt:                           Prompt.
* set radix:                            Numbers.
* set remotedebug:                      Protocol.
* set remotedebug:                      MIPS Remote.
* set retransmit-timeout:               MIPS Remote.
* set rstack_high_address:              Registers.
* set screen-height:                    Renamed Commands.
* set screen-width:                     Renamed Commands.
* set sevenbit-strings:                 Renamed Commands.
* set symbol-reloading:                 Messages/Warnings.
* set timeout:                          MIPS Remote.
* set unionprint:                       Renamed Commands.
* set variable:                         Assignment.
* set verbose:                          Messages/Warnings.
* set vtblprint:                        Renamed Commands.
* set width:                            Screen Size.
* set write:                            Patching.
* setting variables:                    Assignment.
* setting watchpoints:                  Set Watchpoints.
* set_debug_traps:                      Stub Contents.
* share:                                Files.
* shared libraries:                     Files.
* sharedlibrary:                        Files.
* shell:                                Shell Commands.
* shell escape:                         Shell Commands.
* show:                                 Help.
* show addressprint:                    Renamed Commands.
* show args:                            Arguments.
* show array-max:                       Renamed Commands.
* show arrayprint:                      Renamed Commands.
* show asm-demangle:                    Renamed Commands.
* show caution:                         Renamed Commands.
* show check range:                     Range Checking.
* show check type:                      Type Checking.
* show commands:                        History.
* show complaints:                      Messages/Warnings.
* show confirm:                         Messages/Warnings.
* show convenience:                     Convenience Vars.
* show copying:                         Help.
* show demangle:                        Renamed Commands.
* show demangle-style:                  Print Settings.
* show directories:                     Source Path.
* show editing:                         Editing.
* show environment:                     Environment.
* show height:                          Screen Size.
* show history:                         History.
* show history write:                   Renamed Commands.
* show language:                        Show.
* show listsize:                        List.
* show machine:                         Hitachi Special.
* show mipsfpu:                         MIPS Remote.
* show paths:                           Environment.
* show prettyprint:                     Renamed Commands.
* show print address:                   Print Settings.
* show print array:                     Print Settings.
* show print asm-demangle:              Print Settings.
* show print demangle:                  Print Settings.
* show print elements:                  Print Settings.
* show print max-symbolic-offset:       Print Settings.
* show print object:                    Print Settings.
* show print pretty:                    Print Settings.
* show print sevenbit-strings:          Print Settings.
* show print symbol-filename:           Print Settings.
* show print union:                     Print Settings.
* show print vtbl:                      Print Settings.
* show prompt:                          Prompt.
* show radix:                           Numbers.
* show remotedebug:                     MIPS Remote.
* show remotedebug:                     Protocol.
* show retransmit-timeout:              MIPS Remote.
* show rstack_high_address:             Registers.
* show screen-height:                   Renamed Commands.
* show screen-width:                    Renamed Commands.
* show sevenbit-strings:                Renamed Commands.
* show timeout:                         MIPS Remote.
* show unionprint:                      Renamed Commands.
* show user:                            Define.
* show values:                          Value History.
* show verbose:                         Messages/Warnings.
* show version:                         Help.
* show vtblprint:                       Renamed Commands.
* show warranty:                        Help.
* show width:                           Screen Size.
* show write:                           Patching.
* si:                                   Continuing and Stepping.
* signal:                               Signaling.
* signals:                              Signals.
* silent:                               Break Commands.
* sim:                                  Simulator.
* simulator:                            Simulator.
* simulator, H8/300 or H8/500:          Simulator.
* simulator, Hitachi SH:                Simulator.
* simulator, Z8000:                     Simulator.
* size of screen:                       Screen Size.
* source:                               Command Files.
* source path:                          Source Path.
* sparc-stub.c:                         Remote Serial.
* speed:                                Hitachi Boards.
* st2000 CMD:                           ST2000 Remote.
* ST2000 auxiliary commands:            ST2000 Remote.
* stack frame:                          Frames.
* stack on MIPS:                        MIPS Stack.
* stacking targets:                     Active Targets.
* starting:                             Starting.
* STDBUG commands (ST2000):             ST2000 Remote.
* step:                                 Continuing and Stepping.
* stepi:                                Continuing and Stepping.
* stepping:                             Continuing and Stepping.
* stopped threads:                      Thread Stops.
* stub example, remote debugging:       Protocol.
* stupid questions:                     Messages/Warnings.
* switching threads:                    Threads.
* switching threads automatically:      Threads.
* symbol decoding style, C++:           Print Settings.
* symbol dump:                          Symbols.
* symbol names:                         Symbols.
* symbol overloading:                   Breakpoint Menus.
* symbol table:                         Files.
* symbol-file:                          Files.
* symbols, reading immediately:         Files.
* target:                               Targets.
* target amd-eb:                        Target Commands.
* target core:                          Target Commands.
* target e7000:                         Hitachi ICE.
* target exec:                          Target Commands.
* target hms:                           Target Commands.
* target mips PORT:                     MIPS Remote.
* target nindy:                         Target Commands.
* target remote:                        Target Commands.
* target sim:                           Target Commands.
* target sim:                           Simulator.
* target st2000:                        Target Commands.
* target udi:                           Target Commands.
* target vxworks:                       Target Commands.
* tbreak:                               Set Breaks.
* TCP port, target remote:              Debug Session.
* terminal:                             Input/Output.
* this:                                 Cplus expressions.
* thread THREADNO:                      Threads.
* thread breakpoints:                   Thread Stops.
* thread identifier (GDB):              Threads.
* thread identifier (system):           Threads.
* thread number:                        Threads.
* threads and watchpoints:              Set Watchpoints.
* threads of execution:                 Threads.
* threads, automatic switching:         Threads.
* threads, continuing:                  Thread Stops.
* threads, stopped:                     Thread Stops.
* toggle-editing-mode:                  Readline Vi Mode.
* tty:                                  Input/Output.
* type casting memory:                  Expressions.
* type checking:                        Checks.
* type conversions in C++:              Cplus expressions.
* u:                                    Continuing and Stepping.
* udi:                                  UDI29K Remote.
* UDI:                                  UDI29K Remote.
* undisplay:                            Auto Display.
* unknown address, locating:            Output Formats.
* unset:                                Renamed Commands.
* unset environment:                    Environment.
* until:                                Continuing and Stepping.
* up:                                   Selection.
* up-silently:                          Selection.
* user-defined command:                 Define.
* value history:                        Value History.
* variable name conflict:               Variables.
* variable values, wrong:               Variables.
* variables, setting:                   Assignment.
* version number:                       Help.
* VxWorks:                              VxWorks Remote.
* watch:                                Set Watchpoints.
* watchpoints:                          Breakpoints.
* watchpoints and threads:              Set Watchpoints.
* whatis:                               Symbols.
* where:                                Backtrace.
* wild pointer, interpreting:           Print Settings.
* word completion:                      Completion.
* working directory:                    Source Path.
* working directory (of your program):  Working Directory.
* working language:                     Languages.
* writing into corefiles:               Patching.
* writing into executables:             Patching.
* wrong values:                         Variables.
* x:                                    Memory.
* Z8000 simulator:                      Simulator.


