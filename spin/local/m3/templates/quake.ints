
% Quake is weak on integers but since it is turing complete, they can
% be emulated painfully

INC_NEXT = ["1","2","3","4","5","6","7","8","9","0"]
DEC_NEXT = ["9","0","1","2","3","4","5","6","7","8"]
INT_POS = ["5","4","3","2","1","0"]

proc init_int() is
  return ["0","0","0","0","0","0"]
end

proc inc_int(x) is
  local carry = " "

  foreach i in INT_POS
    if carry
      x[i] = INC_NEXT[x[i]]
      if equal(x[i],"0")
        carry = " "
      else
        carry = ""
      end
    end
  end
end

proc dec_int(x) is
  local carry = " "

  foreach i in INT_POS
    if carry
      x[i] = DEC_NEXT[x[i]]
      if equal(x[i],"9")
        carry = " "
      else
        carry = ""
      end
    end
  end
end

proc int_to_string(x) is
  return x[0] & x[1] & x[2] & x[3] & x[4] & x[5]
end

proc array_length(x) is
  local l = init_int()

  foreach i in x
    inc_int(l)
  end
  return l
end

proc reverse_array(x) is
  local l = array_length(x)
  local new = []

  foreach i in x
    dec_int(l)
    new += x[int_to_string(l)]
  end
  return new
end
  
% The linker requires the libraries to be in the right order,
% which is the exact opposite of what IMPORT_LIBS contains
  
proc before_do_m3_hooks() is
  local l = array_length(IMPORT_LIBS)
  local new = []
  dashL = " "

  foreach i in IMPORT_LIBS
    if dashL
      dec_int(l)
      dec_int(l)
      new += IMPORT_LIBS[int_to_string(l)]
      inc_int(l)
      dashL =""
    else
      new += IMPORT_LIBS[int_to_string(l)]
      dec_int(l)
      dashL = " "
    end
  end

  if not equal(dashL," ")
    write("Error, IMPORT_LIBS does not contain an even number of items\n")
  end

  IMPORT_LIBS = new
end
